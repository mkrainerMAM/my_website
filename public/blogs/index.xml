<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lifestyle on Portfolio website of Marie Krainer</title>
    <link>/blogs/</link>
    <description>Recent content in Lifestyle on Portfolio website of Marie Krainer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Oct 2017 22:27:21 -0500</lastBuildDate>
    
	<atom:link href="/blogs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Trump</title>
      <link>/blogs/aliquam/</link>
      <pubDate>Tue, 31 Oct 2017 22:42:51 -0500</pubDate>
      
      <guid>/blogs/aliquam/</guid>
      <description>The goal of this project was to illustrate the change of the net approval rate (approve -disapprove) of Trump since 2017. The first section firstly imports the data and after using the glimpse function that provides a snapshot of the data, I transformed character values into dates.
# Import approval polls data approval_polllist &amp;lt;- read_csv(here::here(&#39;data&#39;,&#39;approval_polllist.csv&#39;)) # or directly off fivethirtyeight website # approval_polllist &amp;lt;- read_csv(&#39;https://projects.fivethirtyeight.com/trump-approval-data/approval_polllist.csv&#39;) glimpse(approval_polllist) # Use `lubridate` to fix dates, as they are given as characters.</description>
    </item>
    
    <item>
      <title>Covid</title>
      <link>/blogs/tempus/</link>
      <pubDate>Tue, 31 Oct 2017 22:26:13 -0500</pubDate>
      
      <guid>/blogs/tempus/</guid>
      <description>The goal of this project was to illustrate the Covid-19 death rates for different age groups and both genders. After having imported and looked at the date, I discovered many different forms of unknowns and decided to clear the dataframe by removing those.
#removing missing and unknown values val_to_remove=c(&amp;quot;Missing&amp;quot;, &amp;quot;Unknown&amp;quot;, &amp;quot;Other&amp;quot;, NA) death_rate_medcond &amp;lt;- covid_data %&amp;gt;% select(medcond_yn, death_yn, sex, age_group) %&amp;gt;% #removing missing and unknown values filter(!(death_yn %in% val_to_remove) , !</description>
    </item>
    
    <item>
      <title>Brexit</title>
      <link>/blogs/magna/</link>
      <pubDate>Tue, 31 Oct 2017 22:26:09 -0500</pubDate>
      
      <guid>/blogs/magna/</guid>
      <description>During this coding project the aim was to compare the four major UK parties Conservative, Labour, UKIP and Liberal Democrats accorind to the percetage that voted for leaving the EU. To visualise the results, I decided to use a scatterplot.
First I wanted to have a look at the dataset provided and therefore used the skim and summary function of R.
brexit_results &amp;lt;- vroom::vroom(here::here(&amp;quot;data&amp;quot;, &amp;quot;brexit_results.csv&amp;quot;)) skim(brexit_results) summary(brexit_results) As the dataframe had four different columns for each party, I decided to create a new dataframe that has a column called party and includes all four parties.</description>
    </item>
    
    <item>
      <title>Trump vs. Clinton</title>
      <link>/blogs/ipsum/</link>
      <pubDate>Tue, 31 Oct 2017 21:28:43 -0500</pubDate>
      
      <guid>/blogs/ipsum/</guid>
      <description>The goal of this project was to illustarte the top 10 cities in California that donated most money to Trump and Clinton. First I saved two different dataframes CA_contributor and zipcodes in new varibales and merged them via left_join as one dataframe as CA_contributors only listed the zipcodes while the other one assigned the zipcodes to the cities. But first I had to transform the zipcodes into doubles to match the format of the zipcodes in the CA_contributor.</description>
    </item>
    
  </channel>
</rss>